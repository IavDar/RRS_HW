package Homework.Lesson_5_Arrays_Strings.General_Lesson_5;

import java.util.Arrays;

public class Lesson5 {
    public static void main(String[] args) {

        /*

        Arrays

        -После создания массива его длину изменить нельзя.
        -Элементы массива можно менять.

        -Чтобы вывести массив на экран,
         можно преобразовать его в строку, либо использовать цикл for.

        -Массивы программисты на Java используют крайне редко.

        -примитивные типы данных в Java не имеют атрибутов (свойств) и методов,
         так как они не являются объектами.

        -Массивы имеют атрибуты и методы, т.к. они являются объектами
        (ссылочные типы данных - reference type).
        Основной атрибут массива - длина.


        int [] array = new int[]{1, 2, 3, 4, 50, -1}; явная инициализация массива
        (сразу инициализируется значениями, размер вычисляется автоматически)

        int[] array = {1, 2, 3, 4, 50, -1}; // new int[] можно опустить (синт. сахар.)


        int [] array = new int[6]; неявная инициализация массива
        (массив из 6 элементов, заполнен нулями).

        */


        int [] array = {1, 2, 3, 4, 50, -1};


        System.out.println(array[3]);

        array[3] = 10;

        System.out.println(array[3]);

        System.out.println(Arrays.toString(array));


        for (int i = 0; i < 6; i++) { // (int i = 0; i < array.length; i++)
            array[i] = array[i] + 1;
        }
        System.out.println(Arrays.toString(array));

        System.out.println(array.length);

        int [] arr1 = {15, 20, 30};
        int [] arr2 = arr1; // ссылка на тот же участок памяти,
        // где хранится первый массив ( в переменную arr2 записывается ссылка на первый массив),
        //а сам массив не копируется, новый массив не создается. Через обе переменные
        // мы получаем доступ по ссылке к одному и тому же массиву (объекту).
        arr2[1] = 25; // через эту ссылку, хранящуюся в переменной arr2,
        // мы меняем значения того же массива.

        System.out.println(Arrays.toString(arr1));


    }
}
